(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{529:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("题目来源"),a("a",{attrs:{href:"https://jsgodroad.com/questions/detail?id=28",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://jsgodroad.com/questions/detail?id=28"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("*为什么 0.1 + 0.2 !== 0.3，请描述原因并手写解决该问题的函数。")]),t._v(" "),a("ol",[a("li",[t._v("因为JS中number类型的数据采用IEEE 754标准，即采用64位二进制来存储数据，其中"),a("code",[t._v("符号位")]),t._v("占"),a("code",[t._v("1")]),t._v("位，"),a("code",[t._v("指数位")]),t._v("占"),a("code",[t._v("11")]),t._v("位，"),a("code",[t._v("尾数位")]),t._v("占"),a("code",[t._v("52")]),t._v("位（超出的部分自动进一舍零），当0.1和0.2在转换为二进制时会出现无限循环的数，")])]),t._v(" "),a("blockquote",[a("p",[t._v("将小数转换为二进制的方法\n对小数乘以2，取结果的整数部分，然后再用小数部分再乘以2，再取结果的整数部分，直到小数部分为0或者位数已够，最后把取出的整数部分按先后次数排序。")])]),t._v(" "),a("p",[t._v("0.1转换成二进制的过程：\n0.1 * 2 = 0.2  取整数位 0")]),t._v(" "),a("p",[t._v("0.2 * 2 = 0.4  取整数位 0")]),t._v(" "),a("p",[t._v("0.4 * 2 = 0.8  取整数位 0")]),t._v(" "),a("p",[t._v("0.8 * 2 = 1.6  取整数位 1")]),t._v(" "),a("p",[t._v("0.6 * 2 = 1.2  取整数位 1")]),t._v(" "),a("p",[t._v("0.2 * 2 = 0.4  取整数位 0")]),t._v(" "),a("p",[t._v("0.4 * 2 = 0.8  取整数位 0")]),t._v(" "),a("p",[t._v("0.8 * 2 = 1.6  取整数位 1")]),t._v(" "),a("p",[t._v("0.6 * 2 = 1.2  取整数位 1")]),t._v(" "),a("p",[t._v("...")]),t._v(" "),a("p",[t._v("按照上面的方法将0.1转为二进制为")]),t._v(" "),a("p",[t._v("0.1(10) => 0.0001100110011(0011无限循环)(2)")]),t._v(" "),a("p",[t._v("所以说进度丢失不是语言的问题，而是浮点数存储本身有问题。对于这种无线循环的二进制数IEEE754规定了一种表示方式。\n"),a("img",{attrs:{src:t.$withBase("/images/interview/v7/31601584-f65ed43e-b21f-11e7-8755-c99b48e5134c.png"),alt:"IEEE数值表示方式"}})]),t._v(" "),a("p",[t._v("注意上述公式遵循科学计数法的规范，在十进制是为0 < M < 10，到二进制就是0 < M < 2。也就是说整数部分只能是1，所以可以被舍去，只保留后面的小数部分。如4.5转成二进制时100.1，用科学计数法表示是1.001 * 2^2，舍去1后"),a("code",[t._v("M = 001")]),t._v("。E是一个无符号整形，因为长度有11位，取值范围为0 - 2047.但科学计数法中的指数是可以是负数的（例如：1.0 * 2^-5），所以再减去一个中间数1023，[0. 1022]表示为负，[1024, 2047]表示为正。如4.5的指数"),a("code",[t._v("E = 1025")]),t._v("（2 + 1023），位数M为001。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/interview/v7/31601584-f65ed43e-b21f-11e7-8755-c99b48e5134d.png"),alt:"IEEE数值表示方式"}}),t._v(" "),a("p",[t._v("0.0001100110011(0011无限循环)科学计数法表示为"),a("code",[t._v("1.1001100110011... * 2 ^ -4")]),t._v("，"),a("code",[t._v("E = -4 + 1023 = 1019")]),t._v("，M舍去首位1，得到1001100110011...所以"),a("code",[t._v("0.1")]),t._v("被表示为`(-1)^0 * 2^-4 + 1023 * 1001100110011...，最终就是")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/interview/v7/11111111.png"),alt:"0.1"}}),t._v(" "),a("p",[t._v("（最后几位的11010是因为11001最后一位是1所以进一就变成了11010）\n转换成十进制后就是0.100000000000000005551115123126，因此就出现了浮点误差。")]),t._v(" "),a("p",[t._v("同理"),a("code",[t._v("0.2")]),t._v("被存储为(-1)^0 * 2 ^-3 + 1023 * 1001100110011...\n"),a("img",{attrs:{src:t.$withBase("/images/interview/v7/2222.png"),alt:"0.2"}})]),t._v(" "),a("p",[t._v("那么在计算时0.1 + 0.2计算步骤为")]),t._v(" "),a("blockquote",[a("p",[t._v("0.00011001100110011001100110011001100110011001100110011010 +\n0.0011001100110011001100110011001100110011001100110011010 =\n0.0100110011001100110011001100110011001100110011001100111\n最后结果转成十进制就是"),a("code",[t._v("0.30000000000000004")])])]),t._v(" "),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[t._v("JavaScript 浮点数陷阱及解法 "),a("a",{attrs:{href:"https://github.com/camsong/blog/issues/9",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/camsong/blog/issues/9"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("探寻 JavaScript 精度问题以及解决方案"),a("a",{attrs:{href:"https://juejin.cn/post/6844903687010123790",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6844903687010123790"),a("OutboundLink")],1)])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("在对小数进行四则运算时可以先将小数转为整数在进行运算")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num1Digits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num2Digits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" base "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1Digits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2Digits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" base "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" base\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);