(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{520:function(e,t,v){"use strict";v.r(t);var _=v(5),c=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("ul",[v("li",[e._v("Vue有了数据劫持为什么还要DOM diff？这不是多此一举嘛。")])]),e._v(" "),v("p",[e._v("1.vue在对数据进行劫持时会保存应用到该数据的Wechater，Wechater分为渲染watcher（一般为组件）、computedWatcher和userWechaer（即用户自定义的watch），当数据发成变更时，vue也就知道要更新哪个watcher，当更新的是一个渲染Watcher时就知道是哪个组件要进行更新，所以只需要对该组件中的DOM进行Diff即可，即vue的更新粒度是组件级别的，如果在组件中应用了computed或者watch也就是该渲染Watcher依赖于computedWatcher和userWatcher，最后也会更新渲染Watcher然后进行DOM diff。")]),e._v(" "),v("img",{attrs:{src:e.$withBase("/images/interview/v8/dep.target.png"),alt:"dep.target"}}),e._v(" "),v("p",[e._v("可以看到在做数据劫持时会判断"),v("code",[e._v("Dep.target")]),e._v("这个变量有没有值，如果有值会执行"),v("code",[e._v("dep.depend()")]),e._v("方法，而这个"),v("code",[e._v("Dep.target")]),e._v("其实指向的是一个Watcher对象")]),e._v(" "),v("img",{attrs:{src:e.$withBase("/images/interview/v8/render-watcher.png"),alt:"render-watcher"}}),e._v(" "),v("img",{attrs:{src:e.$withBase("/images/interview/v8/watch-get.png"),alt:"watch-get"}}),e._v(" "),v("img",{attrs:{src:e.$withBase("/images/interview/v8/depend.png"),alt:"depend"}}),e._v(" "),v("img",{attrs:{src:e.$withBase("/images/interview/v8/watcher-add-dep.png"),alt:"watcher-add-dep"}}),e._v(" "),v("p",[e._v("在组件挂载时会先创建一个Watcher对象，而这个Watcher对象是一个渲染watcher，他的"),v("code",[e._v("getter")]),e._v("会赋值为"),v("code",[e._v("updateComponent")]),e._v("而在"),v("code",[e._v("updateComponent")]),e._v("中也就是会重新执行"),v("code",[e._v("_render")]),e._v("函数生成"),v("code",[e._v("vnode")]),e._v("然后在调用"),v("code",[e._v("_update")]),e._v("方法更新视图，紧接着会执行watcher的"),v("code",[e._v("get")]),e._v("方法，在get方法中会先执行"),v("code",[e._v("pushTarget")]),e._v("方法并且把"),v("code",[e._v("this")]),e._v("（渲染watcher）传进去，在"),v("code",[e._v("pushTarget")]),e._v("函数中会把"),v("code",[e._v("Dep.target")]),e._v("赋值为该渲染watcher。在调用"),v("code",[e._v("_render")]),e._v("的过程中由于使用到了被劫持的数据所以会走到该数据的"),v("code",[e._v("getter")]),e._v("访问器属性中，然后会判断"),v("code",[e._v("Dep.target")]),e._v("，然后执行"),v("code",[e._v("dep.depend()")]),e._v("，"),v("code",[e._v("depend")]),e._v("方法会调用"),v("code",[e._v("Dep.target.addDep(this)")]),e._v("，"),v("code",[e._v("Dep.target")]),e._v("就是watcher，相当于执行"),v("code",[e._v("watcher.addDep")]),e._v("在addDep中会先判断有"),v("code",[e._v("newDepIds")]),e._v("中没有这个"),v("code",[e._v("dep")]),e._v("如果有就忽略，没有的话就添加到"),v("code",[e._v("newDepIds")]),e._v("、"),v("code",[e._v("newDeps")]),e._v("列表中，最后在判断"),v("code",[e._v("depIds")]),e._v("中有没有该"),v("code",[e._v("dep")]),e._v("如果没有就会把"),v("code",[e._v("watcher")]),e._v("添加到"),v("code",[e._v("dep")]),e._v("的"),v("code",[e._v("subs")]),e._v("列表中。")]),e._v(" "),v("p",[e._v("其实上面这一系列就是建立"),v("code",[e._v("Watcher")]),e._v("和"),v("code",[e._v("Dep")]),e._v("的关系，也就是建立数据跟Watcher的关系，然后在数据更新时触发"),v("code",[e._v("setter")]),e._v("访问器属性，执行"),v("code",[e._v("dep.notify()")]),e._v("，在"),v("code",[e._v("notify")]),e._v("方法中会遍历之前添加到"),v("code",[e._v("subs")]),e._v("中的"),v("code",[e._v("Watcher")]),e._v("对象，并调用"),v("code",[e._v("Watcher")]),e._v("对象的"),v("code",[e._v("update")]),e._v("方法进行更新，最后会在执行"),v("code",[e._v("Watcher")]),e._v("的"),v("code",[e._v("get")]),e._v("方法，进行视图更新。")]),e._v(" "),v("img",{attrs:{src:e.$withBase("/images/interview/v8/setter.png"),alt:"setter"}})])}),[],!1,null,null,null);t.default=c.exports}}]);